---
import "@/styles/globals.css";

import { Separator } from "@/components/ui/separator.tsx";

const links = [
  { text: "Home", href: "/", target: "_self" },
  { text: "Discord", href: "https://discord.gg/wc3eseffpB", target: "_blank" },
];
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>PkgForge Index</title>
  </head>
  <body class="overflow-auto">
    <div class="flex flex-col lg:flex-row w-full h-15 lg:h-10 mb-1">
      <h1 class="mt-auto mx-auto lg:mx-0 text-xl lg:text-4xl">Package Forge</h1>
      <div class="flex text-center lg:ml-3">
        {
          links.map((s) => (
            <a class="desktop-a" href={s.href} target={s.target}>
              {s.text}
            </a>
          ))
        }
      </div>
    </div>
    <Separator />
    <slot />
  </body>

  <script is:inline>
    const getThemePreference = () => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    };
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (typeof localStorage !== "undefined") {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      });
    }
  </script>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }

  .desktop-a {
    @apply mt-auto hover:bg-gray-200 hover:dark:bg-gray-500 px-2;
  }
</style>
